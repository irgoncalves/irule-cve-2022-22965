# iRule mitigation for Spring4Shell CVE-2022-22965 
# Written by Ismael Goncalves
# Used iRule from F5 SIRT Log4j as basis 
# This v1.0 - simple match on pattern observed in public exploits/PoC

when RULE_INIT {
     # pattern observed in public exploits 
     set static::spring4shell_regex {(?i)class[\.]module[\.]classLoader}
     # set 1 to drop traffic, 0 to log only
     set static::blocking 0
}

when HTTP_REQUEST {
     # set debugLogging to 0 not to log, 1 to log without exploit, 2 to log exploit
     set debugLogging 2

     set tmpUri [HTTP::uri -normalized] 
     set uri [URI::decode $tmpUri]
     
     # adjust this variable for decoding steps
     set loopLimit 4
     set loopCount 1
     while { $uri ne $tmpUri } {
        if {$loopCount >= $loopLimit} {
            if {$debugLogging == 1} {
                log local0. "spring4shell_rce_detection drop on URI loop limit: $loopCount Source IP: [IP::client_addr]"
            } 
            if {$debugLogging == 2} {
                log local0. "spring4shell_rce_detection drop on URI loop limit: $loopCount $uri Source IP: [IP::client_addr]"
            } 
            unset -nocomplain tmpUri uri loopLimit loopCount
            if { $static::blocking }{
                drop
                event disable all
                return
            }
        } else {
            set tmpUri $uri
            set uri [URI::decode $tmpUri]
            incr loopCount
        }
     }
     unset -nocomplain tmpUri loopLimit loopCount

     if {$uri matches_regex $static::spring4shell_regex} {
        if {$debugLogging == 1} {
            log local0. "spring4shell_rce_detection drop on URI Source IP: [IP::client_addr]"
        } 
        if {$debugLogging == 2} {
            log local0. "spring4shell_rce_detection drop on URI: $uri Source IP: [IP::client_addr]"
       } 
       if { $static::blocking } {
           unset -nocomplain uri
           drop
           event disable all
           return
       }
    }
    unset -nocomplain uri
    
    # POST & PUT Payload blocking collection
    # NOTE: This only collects the first 1MB by default - edit 'collectSize' to change
    set collectSize 1048536
    if {([HTTP::method] eq "POST") || ([HTTP::method] eq "PUT")} {
    # Trigger collection for up to 1MB of data
        if {[HTTP::header "Content-Length"] ne "" && [HTTP::header "Content-Length"] <= $collectSize}{
            set content_length [HTTP::header "Content-Length"]
        } else {
            set content_length $collectSize
        }
        # Check if $content_length is not set to 0
        if { $content_length > 0} {
            HTTP::collect $content_length
        }
    }
}

when HTTP_REQUEST_DATA {
    # POST & PUT Payload blocking
    # set debugLogging to 0 not to log, 1 to log without exploit, 2 to log exploit
    set debugLogging 2

    set tmpPayload [HTTP::payload]
    set payload [URI::decode $tmpPayload]
    
    # adjust this variable for decoding steps
    set loopLimit 4
    set loopCount 1
    while { $payload ne $tmpPayload } {
        if {$loopCount >= $loopLimit} {
            if {$debugLogging == 1} {
                log local0. "spring4shell_rce_detection drop on payload loop limit: $loopCount source IP: [IP::client_addr]"
            } 
            if {$debugLogging == 2} {
                log local0. "spring4shell_rce_detection drop on payload loop limit: $loopCount $payload source IP: [IP::client_addr]"
            }         
            if { $static::blocking } {
                unset -nocomplain tmpPayload payload loopLimit loopCount
                drop
                event disable all
                return
            }
        } else {
            set tmpPayload $payload
            set payload [URI::decode $tmpPayload]
            incr loopCount
        }
    }
    unset -nocomplain tmpPayload loopLimit loopCount

    if {$payload matches_regex $static::spring4shell_regex} {
        if {$debugLogging == 1} {
            log local0. "spring4shell_rce_detection drop on payload  source IP: [IP::client_addr]"
        } 
       if {$debugLogging == 2} {
           log local0. "spring4shell_rce_detection drop on payload: $payload  source IP: [IP::client_addr]"
       } 
       if { $static::blocking }{
           unset -nocomplain payload
           drop
           event disable all
           return
       }
    }
    
    unset -nocomplain payload
}
